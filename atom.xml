<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://izumi-sora.github.io</id>
    <title>izumi的记事本</title>
    <updated>2022-03-30T10:20:02.020Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://izumi-sora.github.io"/>
    <link rel="self" href="https://izumi-sora.github.io/atom.xml"/>
    <subtitle>经历了很多，却记得很少，时间冲刷着沙滩</subtitle>
    <logo>https://izumi-sora.github.io/images/avatar.png</logo>
    <icon>https://izumi-sora.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, izumi的记事本</rights>
    <entry>
        <title type="html"><![CDATA[debian 用户无法使用sudo，解决方法]]></title>
        <id>https://izumi-sora.github.io/post/debian-yong-hu-wu-fa-shi-yong-sudojie-jue-fang-fa/</id>
        <link href="https://izumi-sora.github.io/post/debian-yong-hu-wu-fa-shi-yong-sudojie-jue-fang-fa/">
        </link>
        <updated>2022-03-30T09:07:08.000Z</updated>
        <summary type="html"><![CDATA[<p>ubuntu用户安装后，默认就可以获得sudo权限，然而debian用户就没有这么幸运了，必须手动获取sudo权限，<br>
1.首先要打开终端 terminal，<br>
方法是如图</p>
]]></summary>
        <content type="html"><![CDATA[<p>ubuntu用户安装后，默认就可以获得sudo权限，然而debian用户就没有这么幸运了，必须手动获取sudo权限，<br>
1.首先要打开终端 terminal，<br>
方法是如图</p>
<!-- more -->
<p><img src="https://izumi-sora.github.io/post-images/1648631507096.png" alt="gnome桌面" loading="lazy"><br>
如果是KDE桌面，终端名称会是kon啥啥，具体忘了，<br>
2.输入命令，登陆root账号<br>
打开终端后，debian是无法直接使用sudo命令，需要先使用登陆root账号获得权限，当然，也可以不获得此权限，以后操作直接使用root帐号进行，还能节省打sudo的时间<br>
输入下面命令，登陆root账号，</p>
<pre><code>su
</code></pre>
<p>输入完su，不要傻等，按回车键，然后输入密码，输入的密码是隐形的，不会出现****之类的<br>
<img src="https://izumi-sora.github.io/post-images/1648632180867.png" alt="" loading="lazy"><br>
虽然啰嗦，但输入完密码，还请记得按回车键确认，然后就恭喜及进入root账号，<br>
在该账号下可以直接省略sudo，安装软件，执行命令</p>
<pre><code>apt install vim
</code></pre>
<p>这样就可以安装vim应用<br>
3.让自己的账号，获得sudo权限<br>
输入</p>
<pre><code>vim /etc/sudoers
</code></pre>
<p>如果是gnome桌面，建议gedit /etc/sudoers （用过linux才知道图形界面的好）<br>
按回车键，进入下面界面<br>
<img src="https://izumi-sora.github.io/post-images/1648633205238.png" alt="" loading="lazy"><br>
然后照猫画虎，先用英文输入法按 i 键进入输入模式再输入<br>
root    ALL=(ALL:ALL) ALL</p>
<pre><code>你的用户名   ALL=(ALL:ALL) ALL
</code></pre>
<p>然后按esc键退出输入模式，再按:wq!保存修改（想念图形界面的好）<br>
这样你的自己的用户名也具有sudo权限了<br>
可以输入exit，退出root账号<br>
4.测试<br>
安装软件可以通过终端,来安装vlc视频播放器</p>
<pre><code>sudo apt install vlc
</code></pre>
<p>也可以直接使用应用商店，安装</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[英语学习的经验总结]]></title>
        <id>https://izumi-sora.github.io/post/ying-yu-xue-xi-de-jing-yan-zong-jie/</id>
        <link href="https://izumi-sora.github.io/post/ying-yu-xue-xi-de-jing-yan-zong-jie/">
        </link>
        <updated>2022-03-29T19:44:37.000Z</updated>
        <content type="html"><![CDATA[<p>尽量去使用英语，<br>
比如：把ubuntu设置英文界面，并且少用中文输入法，虽然这会让浏览和搜索速度大幅度下降，但这样的牺牲是值得的。（当然少用不代表不用）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[怎么把自己的linux笔记本变成服务器（局域网内）]]></title>
        <id>https://izumi-sora.github.io/post/zen-me-ba-zi-ji-de-linux-bi-ji-ben-bian-cheng-fu-wu-qi-ju-yu-wang-nei/</id>
        <link href="https://izumi-sora.github.io/post/zen-me-ba-zi-ji-de-linux-bi-ji-ben-bian-cheng-fu-wu-qi-ju-yu-wang-nei/">
        </link>
        <updated>2022-03-29T15:23:36.000Z</updated>
        <summary type="html"><![CDATA[<p>最近想一边在床上玩手机，一边控制自己的笔记本，所以就想把笔记本当作服务器，查了一下，果然可以</p>
<p>1.linux上安装openssh-server</p>
<pre><code>sudo apt install openssh-sever
</code></pre>
<p>如果失败了，请安装aptitdue</p>
<pre><code>sudo apt install aptitude
</code></pre>
<p>然后根据提示卸载冲突的依赖并安装openssh-server</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近想一边在床上玩手机，一边控制自己的笔记本，所以就想把笔记本当作服务器，查了一下，果然可以</p>
<p>1.linux上安装openssh-server</p>
<pre><code>sudo apt install openssh-sever
</code></pre>
<p>如果失败了，请安装aptitdue</p>
<pre><code>sudo apt install aptitude
</code></pre>
<p>然后根据提示卸载冲突的依赖并安装openssh-server</p>
<!-- more -->
<p>2.手机上安装termux，<br>
这里是下载链接 https://f-droid.org/en/packages/com.termux/<br>
安装完成后。<br>
打开termux，先根据提示更新软件</p>
<pre><code>pkg upgrade
</code></pre>
<p>安装openssh</p>
<pre><code>pkg install openssh
</code></pre>
<p>3.进行远程控制<br>
ssh的使用方法是</p>
<pre><code>ssh 用户名@ip地址
</code></pre>
<p>不会有人不知道自己的用户名把，打开终端@前面的就是你的用户名，<br>
当然，你也可以直接用root这个管理员名字做用户名，好处是不用动不动就要输入sudo</p>
<p>ip地址，可以在ubuntu终端上输入</p>
<pre><code>ifconfig | grep inet
</code></pre>
<p>inet 后面的是ipv4地址 （请不要输入127.0.0.1，那是本地地址）<br>
inet6 后面的是ipv6地址（请不要输入::1，那是本地地址）</p>
<p>然后怎么做知道了吗？输入之后，按完确认建，会要求你输入yes，然后是你linux的密码，<br>
登陆成功，撒花💐</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我在ubuntu20.04上推荐安装的软件列表]]></title>
        <id>https://izumi-sora.github.io/post/wo-zai-ubuntu-shang-tui-jian-an-zhuang-de-ruan-jian-lie-biao/</id>
        <link href="https://izumi-sora.github.io/post/wo-zai-ubuntu-shang-tui-jian-an-zhuang-de-ruan-jian-lie-biao/">
        </link>
        <updated>2022-03-28T05:41:42.000Z</updated>
        <content type="html"><![CDATA[<p>实际上是我自己的软件备忘录<br>
sudo apt install '/media/izumi/Hard Disk/Programs/deb/gridea_0.9.2_amd64.deb'<br>
sudo apt install '/media/izumi/Hard Disk/Programs/deb/wps-office_11.1.0.10920.XA_amd64.deb'</p>
<p>sudo apt install timeshift       #给容易崩的系统恢复<br>
sudo apt install goldendict     #字典<br>
sudo apt install vim                #方便但不怎么好用的文本编辑器<br>
sudo apt install net-tools        #网络工具，查ip<br>
sudo apt install openssh-server     #远程控制<br>
sudo apt install gnome-books         #看书，没安装成功<br>
sudo apt install vlc                       #视频播放器<br>
sudo apt install ffmpeg                   #视频格式转换<br>
sudo apt install adb fastboot             #手机刷机工具<br>
sudo apt install aria2                     #下载器<br>
sudo apt install adb fastboot aria2 vim timeshift goldendict net-tools vlc ffmpeg<br>
sudo snap install pycharm   # python学习软件，<br>
sudo apt install ./fault_milestone_one_gog_2_24013.sh # linuxgame.cn<br>
sudo apt install ibus-libpinyin     #中文输入法<br>
sudo apt install kchmviewer      #阅读器，可以看epub<br>
sudo apt install libreoffice-help-zh-cn    #给自带office添加中文语言包<br>
sudo snap install chromium     #另一种浏览器<br>
sudo apt install aptitude        #用来解决apt依赖问题<br>
sudo apt install pidgin         #聊天软件，还没试<br>
sudo apt install nmap         #端口扫面，<br>
sudo apt install unrar p7zip    #解压软件<br>
sudo cp -r zh_CN /opt/kingsoft/wps-office/office6/mui/   #给wps添加中文包<br>
sudo apt install uget      #下载器图形界面<br>
sudo apt install gnome-shell-extension-gsconnect   #和手机同步剪切板<br>
sudo apt install gnome-tweak-tool    #？？<br>
sudo apt install gnome-tweaks   #管理扩展之类的<br>
gnome-extensions enable gsconnect@andyholmes.github.io<br>
gnome-extensions prefs gsconnect@andyholmes.github.io</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ubuntu和手机剪切板同步]]></title>
        <id>https://izumi-sora.github.io/post/ubuntu-he-shou-ji-jian-qie-ban-tong-bu/</id>
        <link href="https://izumi-sora.github.io/post/ubuntu-he-shou-ji-jian-qie-ban-tong-bu/">
        </link>
        <updated>2022-03-28T05:40:27.000Z</updated>
        <content type="html"><![CDATA[<p>1.安装软件,手机安装软件KDE Connect</p>
<pre><code>sudo apt install gnome-shell-extension-gsconnect 
</code></pre>
<p>2.打开图形界面设置</p>
<pre><code>gnome-extensions enable gsconnect@andyholmes.github.io 
gnome-extensions prefs gsconnect@andyholmes.github.io   
</code></pre>
<p>注意：需要在同一局域网下连接<br>
<img src="https://izumi-sora.github.io/post-images/1648448325822.png" alt="" loading="lazy"><br>
<img src="https://izumi-sora.github.io/post-images/1648448335189.png" alt="" loading="lazy"><br>
<img src="https://izumi-sora.github.io/post-images/1648448342856.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[gridea 在linux上安装缺少依赖libappindicator3-1解决方法 ]]></title>
        <id>https://izumi-sora.github.io/post/asdasdsad/</id>
        <link href="https://izumi-sora.github.io/post/asdasdsad/">
        </link>
        <updated>2022-03-26T12:33:18.000Z</updated>
        <content type="html"><![CDATA[<p>环境：debian 11， KDE桌面<br>
原因：缺少必需依赖，bullseye中没有此依赖<br>
解决方法：<br>
1.浏览器搜索此依赖名称，寻找该依赖所在版本结果为<br>
https://packages.debian.org/buster/amd64/libappindicator3-1/download<br>
2.发现依赖所在版本buster，将deb http://ftp.de.debian.org/debian buster main 加入/etc/apt/sources.list<br>
<img src="https://izumi-sora.github.io/post-images/1648361835611.png" alt="" loading="lazy"></p>
<figure data-type="image" tabindex="1"><img src="https://izumi-sora.github.io/post-images/1648361841991.png" alt="" loading="lazy"></figure>
<p>3.更个新，安装</p>
<pre><code>   sudo apt update 
   sudo apt upgrade -y
   sudo apt install &quot;gridea安装包所在位置&quot;
</code></pre>
<p>4.刚刚了解到这个方法也不安全，<br>
<s>用ubuntu20.04，解决所有烦恼</s></p>
<p>Ubuntu 20.04.4 LTS</p>
<p>下载适用于台式机和笔记本电脑的最新 LTS 版本。  LTS 代表长期支持——这意味着在 2025 年 4 月之前的五年内，有保证的免费安全和维护更新。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux桌面要注意备份的个人资料]]></title>
        <id>https://izumi-sora.github.io/post/linux-zhuo-mian-yao-zhu-yi-bei-fen-de-ge-ren-zi-liao/</id>
        <link href="https://izumi-sora.github.io/post/linux-zhuo-mian-yao-zhu-yi-bei-fen-de-ge-ren-zi-liao/">
        </link>
        <updated>2022-03-12T19:39:43.000Z</updated>
        <content type="html"><![CDATA[<p>1.帐号密码  不会有人在换系统的时候不去想想自己有没有忘记自己的密码吧，哭<br>
2.个性化配置文件，比如.inputrc .bash_history 输入法的个人数据，<br>
3家目录，软件再装，家没了不好重建，最好的解决办法就是在删除之前备份整个家目录</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[又用回ubuntu了，]]></title>
        <id>https://izumi-sora.github.io/post/you-yong-hui-ubuntu-liao/</id>
        <link href="https://izumi-sora.github.io/post/you-yong-hui-ubuntu-liao/">
        </link>
        <updated>2022-03-12T19:36:13.000Z</updated>
        <content type="html"><![CDATA[<p>之前用debian很多东西安装起来很麻烦，没办法，还是ubuntu好用一点，毕竟用的人比较多，生态更好一点，之前从小网站下载的deb包，debian运行报错，ubuntu就可以正常运行，搞不懂，</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Debian 安装deb安装包注意事项]]></title>
        <id>https://izumi-sora.github.io/post/debian-an-zhuang-deb-an-zhuang-bao-zhu-yi-shi-xiang/</id>
        <link href="https://izumi-sora.github.io/post/debian-an-zhuang-deb-an-zhuang-bao-zhu-yi-shi-xiang/">
        </link>
        <updated>2022-03-04T12:20:55.000Z</updated>
        <summary type="html"><![CDATA[<p>1.不要dpkg安装<br>
2.尽量apt安装，据说aptitude对安装依赖更好，我试了，不会用<br>
3.如果缺少依赖也能正常运行，要明白此软件随时可能爆炸（虽然我没爆过）</p>
]]></summary>
        <content type="html"><![CDATA[<p>1.不要dpkg安装<br>
2.尽量apt安装，据说aptitude对安装依赖更好，我试了，不会用<br>
3.如果缺少依赖也能正常运行，要明白此软件随时可能爆炸（虽然我没爆过）</p>
<!-- more -->
<p>讲解deb软件包的文章<br>
https://juejin.cn/post/7029284097939734535<br>
内容</p>
<p>Linux制作deb格式安装包教程</p>
<p>我们通常在使用Debian系的Linux系统时，常常会遇到一些deb格式安装包。我们也知道，使用dpkg命令即可安装。</p>
<p>当然，也会下载到一些软件是压缩包，就没那么方便了。我们能不能把它自己打包成deb安装包呢？当然是可以的。</p>
<p>其实，制作一个deb安装包是个很简单的事情。<br>
1，认识deb安装包结构</p>
<p>在制作安装包之前，我们认识一下deb包的内容：</p>
<p><code>image</code>.png</p>
<p>这是我要打包的内容，可见除了DEBIAN文件夹，其余都是应用程序文件，这里其余部分的目录模拟了安装目录（看起来和安装完成后根目录里面对应内容结构一致），这是因为deb安装包安装就是把内容释放到了根目录/下。</p>
<p>DEBIAN文件夹中必须有control文件，表示安装包基本信息。</p>
<p>除此之外，其中还可以有：</p>
<pre><code>preinst 软件安装之前会执行的脚本
postinst 软件安装完成后执行的脚本
prerm 软件卸载前会执行的脚本
postrm 软件卸载后会执行的脚本
</code></pre>
<p>这四个脚本非必须，如果有，这四个脚本文件必须要有可执行权限。<br>
2，开始制作安装包</p>
<p>今天下载了typora，但是是压缩文件格式的，我们就以制作typora的安装包为例开始。<br>
(1) 创建一个目录存放所有文件</p>
<p>我创建了一个名为pack的文件夹，位于/home/maiqu/Downloads/pack，放置安装包内容和配置。下文也以此为例。<br>
(2) 创建DEBIAN文件夹并编写control文件</p>
<p>我们在pack文件夹中创建DEBIAN文件夹，并在里面新建control文件，并编辑control文件。</p>
<p>我这里control内容如下：</p>
<p>Package: typora<br>
Version: 13.6.1<br>
Section: utils<br>
Priority: optional<br>
Architecture: amd64<br>
Installed-Size: 218600<br>
Maintainer: swsk33<a href="mailto:example@163.com">example@163.com</a><br>
Provides: typora<br>
Description: 自己打包的Typora安装包。<br>
复制代码</p>
<p>上述字段意义如下：</p>
<pre><code>Package 包名
Version 版本号
Section 软件的类别，可以是utils、net、mail、text、devel等等
Priority 软件对于系统的重要程度，如required、standard、 optional、extra等等
Architecture 架构，32位软件填写i386，64位软件填写amd64，如果是既能在32位系统运行又能在64为系统运行可以填写all
Installed-Size 安装后大小，单位为kb
Maintainer 维护者，为维护者名&lt;邮箱&gt;的形式
Provides 供应者
Description 描述
</code></pre>
<p>上面的字段是必须字段或者常用字段，除此之外，control文件还可以有以下字段，以下字段非必须，按需加入：</p>
<pre><code>Essential 申明是否是系统最基本的软件包，值为yes或者no，如果是的话，这就表明该软件是维持系统稳定和正常运行的软件包，不允许任何形式的卸载
Depends 软件所依赖的其他软件包和库。如果是依赖多个软件包，彼此之间采用英文逗号隔开（例如该值为libc6, default-jre，说明该软件包依赖于libc6和default-jre这两个软件包，缺一不可）
Pre-Depends 软件安装前必须安装、配置依赖性的软件包和库
Recommends 这个字段表明推荐的安装的其他软件包
Suggests 建议安装的其他软件包
</code></pre>
<p>注意，control文件最末尾必须保留一个空行，否则打包会报错。<br>
(3) 将待打包内容放进来</p>
<p>上面我们知道了，其余内容即为被打包的软件内容，会被直接释放到根目录。那么我们这里也需要保持目录结构。</p>
<p>例如我想让typora安装到/opt文件夹中，那么我们这里就在pack文件夹中创建opt文件夹，将typora文件夹放进这个opt文件夹：</p>
<p>image.png</p>
<p>我们知道了除了DEBIAN文件夹，其它内容都会被直接放到根目录，那么这时我们就要在这里模拟出安装目录，把应用程序文件进行一个组织，以让它安装到我们想要的位置。<br>
(4) 快捷方式</p>
<p>之前写了个博客讲解Linux创建快捷方式的方法，这里就不再赘述Linux快捷方式文件怎么写了，直接参考这个博客即可：链接</p>
<p>当然，我们知道快捷方式文件都位于/usr/share/applications目录下，因此这里我们需要在我们的pack文件夹中建立起/usr/share/applications，在里面新建一个desktop文件表示快捷方式。</p>
<p>不过需要注意的是，快捷方式的可执行文件、图标、运行目录指向必须对应为这个安装包安装完成后我们的应用程序所在位置，如下图：</p>
<p>image.png<br>
3，打包</p>
<p>刚刚完成了安装包配置文件编写，现在就可以打包了。使用dpkg命令打包：</p>
<p>dpkg -b &quot;待打包目录&quot; &quot;生成deb安装包目录&quot;<br>
复制代码</p>
<p>我的待打包内容都在/home/maiqu/Downloads/pack文件夹下，那么我执行命令：</p>
<p>cd /home/maiqu/Downloads<br>
dpkg -b &quot;pack&quot; &quot;Typora-linux.deb&quot;<br>
复制代码</p>
<p>等待安装包构建完成，然后我们就可以使用dpkg -i命令安装它了！</p>
<p>image.png</p>
<p>如果要卸载，还是使用apt remove命令即可，包名就是上面control文件中Package字段的值。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[debian 11 sources.list]]></title>
        <id>https://izumi-sora.github.io/post/debian-11-sourceslist/</id>
        <link href="https://izumi-sora.github.io/post/debian-11-sourceslist/">
        </link>
        <updated>2022-03-03T00:02:11.000Z</updated>
        <summary type="html"><![CDATA[<p>deb http://deb.debian.org/debian bullseye main contrib non-free<br>
deb http://deb.debian.org/debian bullseye-updates main contrib non-free<br>
deb http://deb.debian.org/debian bullseye-backports main contrib non-free<br>
deb http://security.debian.org/debian-security/ bullseye-security main contrib non-free</p>
]]></summary>
        <content type="html"><![CDATA[<p>deb http://deb.debian.org/debian bullseye main contrib non-free<br>
deb http://deb.debian.org/debian bullseye-updates main contrib non-free<br>
deb http://deb.debian.org/debian bullseye-backports main contrib non-free<br>
deb http://security.debian.org/debian-security/ bullseye-security main contrib non-free</p>
<!-- more -->
<p>无用，只需要一个就够了其他的浪费<br>
deb http://deb.debian.org/debian bullseye main contrib non-free</p>
]]></content>
    </entry>
</feed>